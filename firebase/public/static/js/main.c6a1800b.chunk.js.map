{"version":3,"sources":["tsx/App.tsx","media/plus.svg","tsx/AddFood.tsx","tsx/Calorie_counter.tsx","tsx/Date.tsx","media/arrow_left.svg","media/sad.svg","media/plus_sign_white.svg","media/camera_switch.svg","tsx/Scanner.tsx","tsx/Foods.tsx","media/navbar_button.svg","tsx/Navbar.tsx","tsx/Nutrient.tsx","media/carb.svg","media/fat.svg","media/protein.svg","tsx/Nutrients.tsx","media/wave.svg","media/wave_down.svg","tsx/Waves.tsx","tsx/Home.tsx","tsx/Button.tsx","tsx/Settings.tsx","tsx/Welcome.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["render","AddFood","props","useState","clicked","setClicked","updateParent","onClick","className","src","plusSign","alt","Progress","require","Calorie_counter","daily_calorie_count","Number","localStorage","getItem","daily_intake_calorie","percent","Math","min","percentage","isGradient","gradient","angle","startColor","stopColor","isBgShadow","bgShadow","inset","vertical","horizontal","blur","opacity","color","emptyColor","round","date","Date","getDayInString","day","getUTCDay","getDate","dateTodayArray","toUTCString","split","slice","length","TodaysDate","setItem","Quagga","Scanner","firstUpdate","useRef","isStart","setIsStart","face","setFace","detectionHash","useEffect","current","startScanner","stopScanner","_onDetected","res","codeResult","code","undefined","addFoodToDatabase","value","food","window","toString","JSON","parse","stringify","alert","sendScanState","fetchNutritionalFactsJSON","then","nutritional_facts","barcode","product","product_name","a","fetch","response","json","facingMode","init","inputStream","type","target","document","querySelector","constraints","numOfWorkers","navigator","hardwareConcurrency","locate","freqency","debug","drawBoundingBox","showFrequency","drawScanline","showPattern","multiple","locator","halfSample","patchSize","showCanvas","showPatches","showFoundPatches","showSkeleton","showLabels","showPatchLabels","showRemainingPatchLabels","boxFromPatches","showTransformed","showTransformedBox","showBB","decoder","readers","err","console","log","start","onDetected","offProcessed","offDetected","stop","sendData","prevStart","arrow_left_image","camera_switch","id","Foods","barcodes","scanned","setScanner","scanFinished","setScanState","number_of_servings","setNumber_of_servings","servings","setServings","sad_image","barcodes_array","loadedFoodsJsx","i","push","loadLoadedFoods","map","element","currentFood","daily_carb_count","daily_fat_count","daily_protein_count","amountOfConsumedCalories","amountOfConsumedCarb","amountOfConsumedFat","amountOfConsumedProtein","plusSignWhite","brands","prompt","Navbar","clear","location","reload","navbar_button","Nutrient","img_src","Nutrients","nutriments","setNutriments","nutrimentsArray","carb_img","fat_img","protein_img","Waves","wave_image","wave_down_image","Home","foodVisible","setFoodVisible","percentage_count","setPercentageCount","foodToggle","isNaN","Button","downloadedApp","add_button","addEventListener","ref","Settings","gender","setGender","weight","setWeight","height","setHeight","age","setAge","activity","setActivity","dailyIntakeCalorie","actiMultiDict","actiProtDict","actiCarbDict","years","placeholder","onChange","event","name","e","sendSubmitedData","Welcome","getSendForward","setSendForward","innerWidth","body","remove","val","button","App","home","setHome","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById","URL","process","href","origin","headers","contentType","get","status","indexOf","ready","unregister","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.c6a1800b.chunk.js","sourcesContent":["import * as React from \"react\";\r\nimport { useState } from \"react\";\r\n//import { Component } from \"react\";\r\nimport Home from \"./Home\";\r\nimport Scanner from \"./Scanner\";\r\nimport Welcome from \"./Welcome\";\r\n\r\n//bg-green-400 and bg-blue-400\r\n\r\nlet render;\r\n\r\nconst App = () => {\r\n  const [home, setHome] = useState(\r\n    localStorage.getItem(\"daily_intake_calorie\") !== null ? true : false\r\n  );\r\n\r\n  let getData = (val: any) => {\r\n    // do not forget to bind getData in constructor\r\n    setHome(val);\r\n  };\r\n\r\n  if (home) {\r\n    render = <Home />;\r\n  } else {\r\n    render = <Welcome sendSubmitedData={getData} />;\r\n  }\r\n  return <div className=\"page_container\">{render}</div>;\r\n};\r\nexport default App;\r\n","export default __webpack_public_path__ + \"static/media/plus.1a590e4c.svg\";","import * as React from \"react\";\r\nimport { Component, useEffect, useState } from \"react\";\r\nimport plusSign from \"../media/plus.svg\";\r\nimport BarcodeScannerComponent from \"react-qr-barcode-scanner\";\r\nimport Scanner from \"./Scanner\";\r\nimport Foods from \"./Foods\";\r\n\r\nconst AddFood = (props: any) => {\r\n  const [clicked, setClicked] = useState(false);\r\n  let getData = () => {\r\n    // do not forget to bind getData in constructor\r\n    setClicked(getData !== Function ? false : true);\r\n  };\r\n\r\n  if (clicked) {\r\n    props.clicked();\r\n    /*\r\n    return (\r\n      /*\r\n      <div>\r\n        <div className=\"w-full  m-auto absolute inset-0\" id=\"camera_container\">\r\n          <Scanner close={clicked} sendData={getData} />\r\n        </div>\r\n      </div>\r\n    );*/\r\n    return <div></div>;\r\n  } else {\r\n    props.updateParent();\r\n    return (\r\n      <button\r\n        onClick={() => setClicked(true)}\r\n        className=\"absolute right-0 bottom-0 mr-4 mb-5 bg-white flex justify-center items-center rounded-full p-5 shadow-lg\"\r\n      >\r\n        <img src={plusSign} alt=\"plus sign\" />\r\n      </button>\r\n    );\r\n  }\r\n};\r\nexport default AddFood;\r\n\r\n/*\r\n <>\r\n          <BarcodeScannerComponent\r\n            width={500}\r\n            height={500}\r\n            onUpdate={(err: any, result: any) => {\r\n              if (result) setData(result.text);\r\n              else setData(\"Not Found\");\r\n              console.log(err);\r\n            }}\r\n          />\r\n          <p>{data}</p>\r\n          <p>{error}</p>\r\n        </>*/\r\n\r\n////https://www.cluemediator.com/barcode-scanner-in-react\r\n","import * as React from \"react\";\r\nimport { Component, useEffect, useState } from \"react\";\r\nimport background_circle from \"../media/background_circle.svg\";\r\nconst Progress = require(\"@delowar/react-circle-progressbar\");\r\n\r\ninterface Props {\r\n  percentage: number;\r\n}\r\n//change props.percentage to calories instead\r\nconst Calorie_counter = (props: Props) => {\r\n  let daily_calorie_count: number = Number(\r\n    localStorage.getItem(\"daily_calorie_count\")\r\n  );\r\n  let daily_intake_calorie: number = Number(\r\n    localStorage.getItem(\"daily_intake_calorie\")\r\n  );\r\n  return (\r\n    <div className=\"absolute inset-0 w-min h-min m-auto bottom-10\">\r\n      <div className=\"relative transform scale-125\">\r\n        <Progress\r\n          key={props.percentage}\r\n          percent={Math.min(props.percentage, 100)}\r\n          isGradient\r\n          gradient={{\r\n            angle: 5000,\r\n            //old color 60A5FA\r\n            startColor: \"#DACC3E\",\r\n            stopColor: \"#34D399\",\r\n          }}\r\n          isBgShadow\r\n          bgShadow={{\r\n            inset: false,\r\n            vertical: 4,\r\n            horizontal: 0,\r\n            blur: 1,\r\n            opacity: 0.04,\r\n            color: \"#000000\",\r\n          }}\r\n          emptyColor=\"#F6F8F9\"\r\n        >\r\n          <div className=\"text-center p-1\">\r\n            <p\r\n              className={`montserat text-4xl font-bold p-1 tracking-wide ${\r\n                daily_calorie_count > daily_intake_calorie\r\n                  ? \"text-red-500\"\r\n                  : \"text-black\"\r\n              }`}\r\n            >\r\n              {Math.round(daily_calorie_count)}\r\n            </p>\r\n            <p\r\n              className={`montserat text-xs font-thin ${\r\n                daily_calorie_count > daily_intake_calorie\r\n                  ? \"text-red-500\"\r\n                  : \"text-black\"\r\n              }`}\r\n            >\r\n              OF {daily_intake_calorie} KCAL\r\n            </p>\r\n          </div>\r\n        </Progress>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Calorie_counter;\r\n\r\n/*\r\n\r\n <p className=\"absolute inset-0 m-auto w-min h-min text-center z-50\">\r\n          2143 <br /> calories\r\n        </p>\r\n\r\n <div className=\"w-40 h-40 rounded-full calorie_counter_background shadow-xl z-20\"></div>\r\n        <div className=\"w-32 h-32 bg-gray-400 rounded-full z-10 absolute inset-0 m-auto\"></div>\r\n        <div className=\"w-10 h-20 bg-blue-400 absolute top-0 left-0 right-0 m-auto z-5\"></div>\r\n*/\r\n","import * as React from \"react\";\r\nimport { Component } from \"react\";\r\n\r\nconst date = new Date();\r\nconst TodaysDate = () => {\r\n  if (localStorage.getItem(\"date_today\") !== getDate()) {\r\n    localStorage.setItem(\"daily_calorie_count\", \"0\");\r\n    localStorage.setItem(\"daily_carb_count\", \"0\");\r\n    localStorage.setItem(\"daily_protein_count\", \"0\");\r\n    localStorage.setItem(\"daily_fat_count\", \"0\");\r\n  }\r\n  localStorage.setItem(\"date_today\", getDate());\r\n  return (\r\n    <div>\r\n      <div className=\"text-3xl montserrat text-gray-500 mt-8 p-5\">\r\n        {getDayInString()}\r\n        <br />\r\n        <p className=\"text-xl text-black font-bold\">{getDate()}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst getDayInString = () => {\r\n  let day;\r\n  switch (date.getUTCDay()) {\r\n    case 0:\r\n      day = \"Sunday\";\r\n      break;\r\n    case 1:\r\n      day = \"Monday\";\r\n      break;\r\n    case 2:\r\n      day = \"Tuesday\";\r\n      break;\r\n    case 3:\r\n      day = \"Wednesday\";\r\n      break;\r\n    case 4:\r\n      day = \"Thursday\";\r\n      break;\r\n    case 5:\r\n      day = \"Friday\";\r\n      break;\r\n    case 6:\r\n      day = \"Saturday\";\r\n      break;\r\n    default:\r\n      day = \"No day of the week found :(\";\r\n  }\r\n  return day;\r\n};\r\n//FIX THIS\r\nconst getDate = () => {\r\n  let dateToday = date.toUTCString();\r\n  let dateTodayArray = dateToday.split(\" \");\r\n  dateTodayArray = dateTodayArray.slice(1, dateTodayArray.length);\r\n  return `${dateTodayArray[1]} ${dateTodayArray[0]}, ${dateTodayArray[2]}`;\r\n};\r\nexport default TodaysDate;\r\n","export default __webpack_public_path__ + \"static/media/arrow_left.942f94f1.svg\";","export default __webpack_public_path__ + \"static/media/sad.5f7ddbd5.svg\";","export default __webpack_public_path__ + \"static/media/plus_sign_white.4b27b0a2.svg\";","export default __webpack_public_path__ + \"static/media/camera_switch.b7cd5795.svg\";","import React, { useEffect, useRef, useState } from \"react\";\r\nimport plusSign from \"../media/plus.svg\";\r\nconst Quagga = require(\"quagga\");\r\nimport arrow_left_image from \"../media/arrow_left.svg\";\r\nimport camera_switch from \"../media/camera_switch.svg\";\r\n\r\nconst Scanner = (props: any) => {\r\n  const firstUpdate = useRef(false);\r\n  const [isStart, setIsStart] = useState(true);\r\n  const [face, setFace] = useState(\"user\"); //environment\r\n  let detectionHash: any = {};\r\n\r\n  useEffect(() => {\r\n    if (firstUpdate.current) {\r\n      firstUpdate.current = false;\r\n      return;\r\n    }\r\n    if (isStart) startScanner(face);\r\n    else stopScanner();\r\n  }, [isStart]);\r\n\r\n  const barcodeExists = (barcode: Number) => {\r\n    return localStorage.getItem(barcode.toString()) === null ? false : true;\r\n  };\r\n\r\n  const _onDetected = (res: any) => {\r\n    // stopScanner();\r\n    //barcodes.push(res.codeResult.format + \" : \" + res.codeResult.code);\r\n    detectionHash[res.codeResult.code] =\r\n      detectionHash[res.codeResult.code] === undefined\r\n        ? 0\r\n        : (detectionHash[res.codeResult.code] += 1);\r\n    // setBarcode(res.codeResult.code);\r\n    if (detectionHash[res.codeResult.code] >= 5) {\r\n      let addFoodToDatabase = (value: any) => {\r\n        let food = window.localStorage.getItem(res.codeResult.code)?.toString();\r\n        if (food === undefined) {\r\n          food = \"undefined\";\r\n        }\r\n        let json = JSON.parse(food);\r\n        //! remove this when viggo has finished his daily intake\r\n        /*localStorage.setItem(\"daily_intake_calorie\", \"2950\");\r\n        localStorage.setItem(\"daily_intake_carb\", \"325\");\r\n        localStorage.setItem(\"daily_intake_fat\", \"77\");\r\n        localStorage.setItem(\"daily_intake_protein\", \"56\");*/\r\n\r\n        if (localStorage.getItem(\"daily_calorie_count\") === null) {\r\n          localStorage.setItem(\"daily_calorie_count\", \"0\");\r\n        }\r\n        if (localStorage.getItem(\"daily_carb_count\") === null) {\r\n          localStorage.setItem(\"daily_carb_count\", \"0\");\r\n        }\r\n        if (localStorage.getItem(\"daily_fat_count\") === null) {\r\n          localStorage.setItem(\"daily_fat_count\", \"0\");\r\n        }\r\n        if (localStorage.getItem(\"daily_protein_count\") === null) {\r\n          localStorage.setItem(\"daily_protein_count\", \"0\");\r\n        }\r\n        //!----------------------------------------------\r\n\r\n        let dailyIntake: Number = Number(\r\n          localStorage.getItem(\"daily_intake_calorie\")\r\n        );\r\n\r\n        dailyIntake;\r\n\r\n        localStorage.setItem(\"current_food\", JSON.stringify(value));\r\n        alert(\"added food to database\");\r\n        props.sendScanState(true);\r\n      };\r\n      //!This fires only when it has found 5 of the same barcode :D\r\n      detectionHash = [];\r\n      let foodInDatabase =\r\n        localStorage.getItem(res.codeResult.code) === null ? false : true;\r\n\r\n      if (!foodInDatabase) {\r\n        fetchNutritionalFactsJSON(res.codeResult.code).then(\r\n          (nutritional_facts) => {\r\n            // alert(\"fetching food from api\");\r\n            if (nutritional_facts.product.product_name !== undefined) {\r\n              if (!barcodeExists(res.codeResult.code)) {\r\n                window.localStorage.setItem(\r\n                  \"barcodes\",\r\n                  window.localStorage.getItem(\"barcodes\") === null\r\n                    ? `${res.codeResult.code},`\r\n                    : `${\r\n                        window.localStorage.getItem(\"barcodes\") +\r\n                        res.codeResult.code\r\n                      },`\r\n                );\r\n              }\r\n\r\n              window.localStorage.setItem(\r\n                res.codeResult.code,\r\n                JSON.stringify(nutritional_facts)\r\n              );\r\n              addFoodToDatabase(nutritional_facts);\r\n            } else {\r\n              alert(\"food not found :(\");\r\n            }\r\n          }\r\n        );\r\n        stopScanner();\r\n      } else {\r\n        addFoodToDatabase(\r\n          JSON.parse(localStorage.getItem(res.codeResult.code) || \"{}\")\r\n        );\r\n        stopScanner();\r\n      }\r\n    }\r\n  };\r\n  async function fetchNutritionalFactsJSON(barcode: Number) {\r\n    const response = await fetch(\r\n      `https://world.openfoodfacts.org/api/v0/product/${barcode.toString()}.json`\r\n    );\r\n    const nutritional_facts = await response.json();\r\n    return nutritional_facts;\r\n  }\r\n  const startScanner = (facingMode: String) => {\r\n    Quagga.init(\r\n      {\r\n        inputStream: {\r\n          type: \"LiveStream\",\r\n          target: document.querySelector(\"#scanner-container\"),\r\n          constraints: {\r\n            facingMode: facingMode,\r\n            // or user\r\n          },\r\n        },\r\n        numOfWorkers: navigator.hardwareConcurrency,\r\n        locate: true,\r\n        //!VERY IMPORTANT\r\n        freqency: 20,\r\n        debug: {\r\n          drawBoundingBox: true,\r\n          showFrequency: false,\r\n          drawScanline: true,\r\n          showPattern: true,\r\n        },\r\n        multiple: false,\r\n        locator: {\r\n          halfSample: false,\r\n          patchSize: \"small\", // x-small, small, medium, large, x-large\r\n          debug: {\r\n            showCanvas: false,\r\n            showPatches: false,\r\n            showFoundPatches: false,\r\n            showSkeleton: false,\r\n            showLabels: true,\r\n            showPatchLabels: false,\r\n            showRemainingPatchLabels: false,\r\n            boxFromPatches: {\r\n              showTransformed: false,\r\n              showTransformedBox: false,\r\n              showBB: true,\r\n            },\r\n          },\r\n        },\r\n        decoder: {\r\n          readers: [\"ean_reader\"],\r\n        },\r\n      },\r\n      (err: any) => {\r\n        if (err) {\r\n          return console.log(err);\r\n        }\r\n        Quagga.start();\r\n      }\r\n    );\r\n    Quagga.onDetected(_onDetected);\r\n  };\r\n\r\n  function sleep(ms: number) {\r\n    return new Promise((resolve) => setTimeout(resolve, ms));\r\n  }\r\n  const stopScanner = () => {\r\n    Quagga.offProcessed();\r\n    Quagga.offDetected();\r\n    Quagga.stop();\r\n    props.sendData(false);\r\n  };\r\n  const stopScannerWithoutGoingBack = () => {\r\n    Quagga.offProcessed();\r\n    Quagga.offDetected();\r\n    Quagga.stop();\r\n  };\r\n  const switch_camera = () => {\r\n    //!Fires the same thing?\r\n    //!grape cant scan throwing error FIX THAT\r\n    setFace(face === \"user\" ? \"environment\" : \"user\");\r\n    stopScannerWithoutGoingBack();\r\n    startScanner(face);\r\n  };\r\n  return (\r\n    <div className=\"flex flex-col\">\r\n      <nav className=\"w-full p-4 navbar flex shadow-md items-center justify-center\">\r\n        <button onClick={() => setIsStart((prevStart) => !prevStart)}>\r\n          <img src={arrow_left_image} alt=\"arrow icon\" />\r\n        </button>\r\n        <p className=\"m-auto text-white text-lg w-fit\">Scan Barcode</p>\r\n        <button\r\n          className=\"flex justify-center items-center\"\r\n          onClick={switch_camera}\r\n        >\r\n          <img src={camera_switch} alt=\"plus sign white\" />\r\n        </button>\r\n      </nav>\r\n      <div id=\"scanner-container\" className=\"flex\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scanner;\r\n\r\n//https://www.cluemediator.com/barcode-scanner-in-react\r\n//instascan?\r\n","import * as React from \"react\";\r\nimport { Component, useState } from \"react\";\r\nimport arrow_left_image from \"../media/arrow_left.svg\";\r\nimport sad_image from \"../media/sad.svg\";\r\nimport plusSignWhite from \"../media/plus_sign_white.svg\";\r\nimport plusSign from \"../media/plus.svg\";\r\nimport Scanner from \"./Scanner\";\r\nconst Foods = (props: any) => {\r\n  let render;\r\n  const [barcodes] = useState(\r\n    localStorage.getItem(\"barcodes\") === null\r\n      ? \"\"\r\n      : localStorage.getItem(\"barcodes\")\r\n  );\r\n  const [clicked, setClicked] = useState(false);\r\n  const [scanned, setScanner] = useState(false);\r\n  const [scanFinished, setScanState] = useState(false);\r\n  const [number_of_servings, setNumber_of_servings] = useState(1);\r\n  const [servings, setServings] = useState(100);\r\n\r\n  const clickedLoadedFood = (value: any) => {\r\n    console.log(value);\r\n    localStorage.setItem(\"current_food\", localStorage.getItem(value) || \"\");\r\n    setScanner(true);\r\n    setScanState(true);\r\n  };\r\n\r\n  const getData = () => {\r\n    setScanner(true);\r\n    setClicked(false);\r\n  };\r\n  const getScanState = () => {\r\n    setScanState(true);\r\n  };\r\n  const startScanner = () => {\r\n    setClicked(true);\r\n    setScanner(false);\r\n  };\r\n  const loadLoadedFoods = () => {\r\n    let barcodes_array = barcodes === null ? \",\" : barcodes.split(\",\");\r\n    let loadedFoodsJsx = [];\r\n\r\n    for (let i = 0; i < barcodes_array?.length - 1; i++) {\r\n      loadedFoodsJsx.push(\r\n        <button\r\n          className=\"food_container w-full hover:bg-gray-100 focus:bg-gray-100 transition-colors\"\r\n          key={barcodes_array[i]}\r\n          onClick={() => clickedLoadedFood(barcodes_array[i])}\r\n        >\r\n          <div className=\"p-4 text-sm text-left\">\r\n            <p>\r\n              {\r\n                JSON.parse(localStorage.getItem(barcodes_array[i]) || \"{}\")\r\n                  .product.product_name\r\n              }\r\n            </p>\r\n          </div>\r\n          <hr />\r\n        </button>\r\n      );\r\n    }\r\n    // return jsx;\r\n    return loadedFoodsJsx;\r\n  };\r\n\r\n  const addData = () => {\r\n    let daily_calorie_count: Number = Number(\r\n      localStorage.getItem(\"daily_calorie_count\")\r\n    );\r\n    let daily_carb_count: Number = Number(\r\n      localStorage.getItem(\"daily_carb_count\")\r\n    );\r\n    let daily_fat_count: Number = Number(\r\n      localStorage.getItem(\"daily_fat_count\")\r\n    );\r\n    let daily_protein_count: Number = Number(\r\n      localStorage.getItem(\"daily_protein_count\")\r\n    );\r\n    let json: any = JSON.parse(localStorage.getItem(\"current_food\") || \"{}\");\r\n\r\n    //! when kcal not found use kj and convert to kcal\r\n    let amountOfConsumedCalories: any = Number(\r\n      ((json[\"product\"][\"nutriments\"][\"energy_100g\"] * 0.2388) / 100) *\r\n        number_of_servings *\r\n        servings\r\n    );\r\n    let amountOfConsumedCarb: any = Number(\r\n      (json[\"product\"][\"nutriments\"][\"carbohydrates_100g\"] / 100) *\r\n        number_of_servings *\r\n        servings\r\n    );\r\n    let amountOfConsumedFat: any = Number(\r\n      (json[\"product\"][\"nutriments\"][\"fat_100g\"] / 100) *\r\n        number_of_servings *\r\n        servings\r\n    );\r\n    let amountOfConsumedProtein: any = Number(\r\n      (json[\"product\"][\"nutriments\"][\"proteins_100g\"] / 100) *\r\n        number_of_servings *\r\n        servings\r\n    );\r\n    localStorage.setItem(\r\n      \"daily_calorie_count\",\r\n      daily_calorie_count + amountOfConsumedCalories\r\n    );\r\n    localStorage.setItem(\r\n      \"daily_carb_count\",\r\n      daily_carb_count + amountOfConsumedCarb\r\n    );\r\n\r\n    localStorage.setItem(\r\n      \"daily_fat_count\",\r\n      daily_fat_count + amountOfConsumedFat\r\n    );\r\n    localStorage.setItem(\r\n      \"daily_protein_count\",\r\n      daily_protein_count + amountOfConsumedProtein\r\n    );\r\n\r\n    props.clicked();\r\n  };\r\n  if (scanned && scanFinished) {\r\n    let currentFood = JSON.parse(localStorage.getItem(\"current_food\") || \"{}\");\r\n    //fires more than once?\r\n    //alert(\"reading food now\");\r\n    render = (\r\n      <div className=\"w-full h-full bg-white absolute\">\r\n        <nav className=\"w-full p-4 navbar flex shadow-md fixed items-center justify-center\">\r\n          <button onClick={props.clicked}>\r\n            <img src={arrow_left_image} alt=\"arrow icon\" />\r\n          </button>\r\n          <p className=\"m-auto text-white text-lg w-fit\">Add Food</p>\r\n          <button\r\n            className=\"flex justify-center items-center\"\r\n            onClick={addData}\r\n          >\r\n            <img src={plusSignWhite} alt=\"plus sign white\" />\r\n          </button>\r\n        </nav>\r\n        <div className=\"mt-16\">\r\n          <p className=\"p-4 font-bold text-lg\">{`${\r\n            currentFood.product.product_name == undefined\r\n              ? \"\"\r\n              : currentFood.product.product_name\r\n          } (${currentFood.product.brands})`}</p>\r\n        </div>\r\n        <hr />\r\n        <button\r\n          className=\"p-4 flex justify-between w-full text-xs\"\r\n          onClick={() =>\r\n            setNumber_of_servings(Number(prompt(\"Number of servings\")))\r\n          }\r\n        >\r\n          <p>Number of Servings</p>\r\n          <p className=\"text-green-400\">{number_of_servings}</p>\r\n        </button>\r\n        <hr />\r\n        <button\r\n          className=\"p-4 flex justify-between w-full text-xs\"\r\n          onClick={() => setServings(Number(prompt(\"Serving Size\")))}\r\n        >\r\n          <p>Serving Size</p>\r\n          <p className=\"text-green-400\">{servings}g</p>\r\n        </button>\r\n        <hr />\r\n      </div>\r\n    );\r\n  } else {\r\n    //fix this somehow\r\n    if (clicked && !scanned) {\r\n      return <Scanner sendData={getData} sendScanState={getScanState} />;\r\n    } else {\r\n      return (\r\n        <div className=\"w-full h-full bg-white absolute fade-in\">\r\n          <nav className=\"w-full p-5 navbar flex shadow-md fixed\">\r\n            <button onClick={props.clicked}>\r\n              <img src={arrow_left_image} alt=\"\" />\r\n            </button>\r\n\r\n            <p className=\"m-auto absolute text-white text-xl right-0 left-0 w-fit\">\r\n              Add Food\r\n            </p>\r\n          </nav>\r\n          <section className=\"mt-16\">\r\n            {barcodes === \"\" ? (\r\n              <div className=\"inset-0 w-fit absolute m-auto h-min\">\r\n                <img src={sad_image} alt=\"sad face :(\" />\r\n                <p className=\"text-center text-green-400 text-xl p-2 font-light\">\r\n                  NO FOOD FOUND\r\n                </p>\r\n              </div>\r\n            ) : (\r\n              <div>{loadLoadedFoods().map((element) => element)}</div>\r\n            )}\r\n          </section>\r\n          <button\r\n            onClick={startScanner}\r\n            className=\"fixed right-0 bottom-0 mr-4 mb-5 bg-white flex justify-center items-center rounded-full p-5 shadow-lg\"\r\n          >\r\n            <img src={plusSign} alt=\"plus sign\" />\r\n          </button>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  return <div>{render}</div>;\r\n};\r\nexport default Foods;\r\n","export default __webpack_public_path__ + \"static/media/navbar_button.c9ad1629.svg\";","import * as React from \"react\";\r\n//import { Component } from \"react\";\r\nimport navbar_button from \"../media/navbar_button.svg\";\r\nconst Navbar = () => {\r\n  const resetEverything = () => {\r\n    localStorage.clear();\r\n    location.reload();\r\n  };\r\n  return (\r\n    <nav className=\"flex p-6 relative items-center justify-center\">\r\n      <div className=\"w-16 flex items-center justify-center\">\r\n        <button onClick={resetEverything}>\r\n          <img src={navbar_button} alt=\"navbar button\" className=\"w-8\" />\r\n        </button>\r\n      </div>\r\n      <div className=\"montserrat w-full text-white text-2xl font-light text-center\">\r\n        <button>Progress</button>\r\n      </div>\r\n      <div className=\"rounded-full w-16 flex items-center justify-center shadow-xl\">\r\n        <button>\r\n          <img\r\n            src=\"https://avatars.dicebear.com/api/avataaars/:seed.svg?background=%23ffffff\"\r\n            alt=\"avatar\"\r\n            className=\"w-full h-full rounded-full\"\r\n          ></img>\r\n        </button>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\nexport default Navbar;\r\n","import * as React from \"react\";\r\nimport { Component } from \"react\";\r\n\r\ninterface Props {\r\n  img_src: any;\r\n  percentage: Number;\r\n}\r\n\r\nconst Nutrient = (props: Props) => {\r\n  let color = props.percentage > 100 ? \"red\" : \"black\";\r\n  return (\r\n    <div\r\n      className={`flex w-max flex-row px-0.5 justify-center items-center font-medium text-${color}-500`}\r\n    >\r\n      <img src={props.img_src} alt=\"Nutrient\" className=\"p-1\"></img>\r\n      <p className=\"p-2\">{props.percentage}%</p>\r\n    </div>\r\n  );\r\n};\r\nexport default Nutrient;\r\n","export default __webpack_public_path__ + \"static/media/carb.44a932f1.svg\";","export default __webpack_public_path__ + \"static/media/fat.91b43121.svg\";","export default __webpack_public_path__ + \"static/media/protein.0eab995e.svg\";","import * as React from \"react\";\r\nimport { Component, useEffect, useState } from \"react\";\r\nimport Nutrient from \"./Nutrient\";\r\nimport carb_img from \"../media/carb.svg\";\r\nimport fat_img from \"../media/fat.svg\";\r\nimport protein_img from \"../media/protein.svg\";\r\nconst Nutrients = () => {\r\n  const [nutriments, setNutriments]: any = useState([]);\r\n  let nutrimentsArray: any = [];\r\n\r\n  nutrimentsArray.push(\r\n    //carb\r\n    Math.round(\r\n      (Number(localStorage.getItem(\"daily_carb_count\")) /\r\n        Number(localStorage.getItem(\"daily_intake_carb\"))) *\r\n        100\r\n    )\r\n  );\r\n  nutrimentsArray.push(\r\n    //fat\r\n    Math.round(\r\n      (Number(localStorage.getItem(\"daily_fat_count\")) /\r\n        Number(localStorage.getItem(\"daily_intake_fat\"))) *\r\n        100\r\n    )\r\n  );\r\n  nutrimentsArray.push(\r\n    //protein\r\n    Math.round(\r\n      (Number(localStorage.getItem(\"daily_protein_count\")) /\r\n        Number(localStorage.getItem(\"daily_intake_protein\"))) *\r\n        100\r\n    )\r\n  );\r\n\r\n  useEffect(() => {\r\n    setNutriments(nutrimentsArray);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"flex justify-center rounded-full p-0.5 nutrients_container absolute left-0 right-0 top-80 bottom-2 m-auto w-min h-min transform scale-110\">\r\n      <Nutrient img_src={carb_img} percentage={nutriments[0]}></Nutrient>\r\n      <Nutrient img_src={fat_img} percentage={nutriments[1]}></Nutrient>\r\n      <Nutrient img_src={protein_img} percentage={nutriments[2]}></Nutrient>\r\n    </div>\r\n  );\r\n};\r\nexport default Nutrients;\r\n","export default __webpack_public_path__ + \"static/media/wave.d67f922a.svg\";","export default __webpack_public_path__ + \"static/media/wave_down.3dd7aa2d.svg\";","import * as React from \"react\";\r\n//import { Component } from \"react\";\r\nimport wave_image from \"../media/wave.svg\";\r\nimport wave_down_image from \"../media/wave_down.svg\";\r\n\r\nconst Waves = () => {\r\n  return (\r\n    <div className=\"waves\">\r\n      <img\r\n        src={wave_image}\r\n        alt=\"waves\"\r\n        className=\"object-fill w-screen absolute top-0 pointer-events-none select-none z-behind\"\r\n      />\r\n      <img\r\n        src={wave_down_image}\r\n        alt=\"waves\"\r\n        className=\"object-fill w-screen absolute bottom-0 pointer-events-none select-none  z-behind\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Waves;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport AddFood from \"./AddFood\";\r\nimport Calorie_counter from \"./Calorie_counter\";\r\nimport TodaysDate from \"./Date\";\r\nimport Foods from \"./Foods\";\r\n//import { Component } from \"react\";\r\nimport Navbar from \"./Navbar\";\r\nimport Nutrients from \"./Nutrients\";\r\nimport Scanner from \"./Scanner\";\r\nimport Waves from \"./Waves\";\r\n\r\nconst Home = () => {\r\n  const [foodVisible, setFoodVisible] = useState(false);\r\n  const [percentage_count, setPercentageCount] = useState(\r\n    (Number(localStorage.getItem(\"daily_calorie_count\")) /\r\n      Number(localStorage.getItem(\"daily_intake_calorie\"))) *\r\n      100\r\n  );\r\n\r\n  //launch function here :(\r\n  const updateCounter = () => {\r\n    setPercentageCount(\r\n      (Number(localStorage.getItem(\"daily_calorie_count\")) /\r\n        Number(localStorage.getItem(\"daily_intake_calorie\"))) *\r\n        100\r\n    );\r\n  };\r\n\r\n  const foodToggle = () => {\r\n    setFoodVisible(!foodVisible);\r\n  };\r\n\r\n  if (!foodVisible) {\r\n    return (\r\n      <main>\r\n        <Waves />\r\n        <Navbar />\r\n        <TodaysDate />\r\n        <Calorie_counter\r\n          percentage={Number.isNaN(percentage_count) ? 0 : percentage_count}\r\n        />\r\n        <Nutrients></Nutrients>\r\n        <AddFood updateParent={updateCounter} clicked={foodToggle}></AddFood>\r\n      </main>\r\n    );\r\n  } else {\r\n    return <Foods clicked={foodToggle} />;\r\n  }\r\n};\r\nexport default Home;\r\n\r\n//https://www.npmjs.com/package/@delowar/react-circle-progressbar\r\n\r\n/*\r\n\r\n    <button onClick={() => setCount(count + 1)} className=\"border-2\">\r\n        Click me\r\n      </button>\r\n*/\r\n","import React, { Component, useEffect, useRef, useState } from \"react\";\r\n\r\ninterface Props {\r\n  button?: Number;\r\n  sendData?: any;\r\n}\r\nconst Button = (props: Props) => {\r\n  let render;\r\n\r\n  const [downloadedApp, setDownloadedApp] = useState(true);\r\n  let deferredPrompt: any;\r\n  const add_button: any = useRef(null);\r\n\r\n  useEffect(() => {\r\n    add_button.current.addEventListener(\"click\", () => {\r\n      props.sendData(true);\r\n    });\r\n  }, []);\r\n  /*\r\n  window.addEventListener(\"beforeinstallprompt\", (e) => {\r\n    // Prevent Chrome 67 and earlier from automatically showing the prompt\r\n    e.preventDefault();\r\n    // Stash the event so it can be triggered later.\r\n    deferredPrompt = e;\r\n    // Update UI to notify the user they can add to home screen\r\n    add_button.current.style.display = \"block\";\r\n\r\n    //!important some reason it cant find the add_button :(\r\n    if (window.matchMedia(\"(display-mode: standalone)\").matches) {\r\n    } else {\r\n      add_button.current.addEventListener(\"click\", () => {\r\n        // hide our user interface that shows our A2HS button\r\n        add_button.current.style.display = \"none\";\r\n        // Show the prompt\r\n        deferredPrompt.prompt();\r\n        // Wait for the user to respond to the prompt\r\n        deferredPrompt.userChoice.then((choiceResult: any) => {\r\n          if (choiceResult.outcome === \"accepted\") {\r\n            console.log(\"User accepted the A2HS prompt\");\r\n          } else {\r\n            console.log(\"User dismissed the A2HS prompt\");\r\n          }\r\n          deferredPrompt = null;\r\n        });\r\n      });\r\n    }\r\n  });\r\n*/\r\n  return (\r\n    <div>\r\n      {\r\n        <button\r\n          ref={add_button}\r\n          className=\"bg-white text-lg px-6 py-2 whitespace-nowrap shadow-none rounded-full no-hover-effect\"\r\n        >\r\n          <span>{downloadedApp ? \"Get Started!\" : \"Add to home screen\"}</span>\r\n        </button>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React, { Component, useState } from \"react\";\r\n\r\nconst Settings = (props: any) => {\r\n  const [gender, setGender] = useState(1);\r\n  const [weight, setWeight] = useState(0);\r\n  const [height, setHeight] = useState(0);\r\n  const [age, setAge] = useState(0);\r\n  const [activity, setActivity] = useState(1);\r\n\r\n  let dailyIntakeCalorie = 0;\r\n\r\n  let actiMultiDict: any = {\r\n    \"1\": 1.2,\r\n    \"2\": 1.375,\r\n    \"3\": 1.55,\r\n    \"4\": 1.725,\r\n  };\r\n  let actiProtDict: any = {\r\n    \"1\": 0.8,\r\n    \"2\": 0.9,\r\n    \"3\": 0.9,\r\n    \"4\": 1.0,\r\n  };\r\n  let actiCarbDict: any = {\r\n    \"1\": \"225\",\r\n    \"2\": \"255\",\r\n    \"3\": \"295\",\r\n    \"4\": \"325\",\r\n  };\r\n\r\n  let years: any = [];\r\n  for (let i = 13; i < 150; i++) {\r\n    years.push(\r\n      <option value={i} key={i}>\r\n        {i}\r\n      </option>\r\n    );\r\n  }\r\n  const WriteToLocalStorage = () => {\r\n    switch (Number(gender)) {\r\n      case 1:\r\n        //Male\r\n        dailyIntakeCalorie = Math.round(\r\n          (10 * weight + 6.25 * height - 5 * age + 5) * actiMultiDict[activity]\r\n        );\r\n        //alert(dailyIntakeCalorie);\r\n        break;\r\n\r\n      case 2:\r\n        //Female\r\n        dailyIntakeCalorie = Math.round(\r\n          (10 * weight + 6.25 * height - 5 * age - 161) *\r\n            actiMultiDict[activity]\r\n        );\r\n        //alert(dailyIntakeCalorie);\r\n        break;\r\n\r\n      case 3:\r\n        //Unidentified\r\n        dailyIntakeCalorie = Math.round(\r\n          ((10 * weight + 6.25 * height - 5 * age + 5) *\r\n            actiMultiDict[activity] +\r\n            (10 * weight + 6.25 * height - 5 * age - 161) *\r\n              actiMultiDict[activity]) /\r\n            2\r\n        );\r\n        //This equation is (daily intake male + daily intake female)/2\r\n        //alert(dailyIntakeCalorie);\r\n        break;\r\n\r\n      default:\r\n        alert(\"Please select your gender :)\");\r\n        break;\r\n    }\r\n    if (weight != 0 || height != 0) {\r\n      localStorage.setItem(\r\n        \"daily_intake_calorie\",\r\n        dailyIntakeCalorie.toString()\r\n      );\r\n      localStorage.setItem(\"daily_intake_carb\", actiCarbDict[activity]);\r\n      localStorage.setItem(\r\n        \"daily_intake_fat\",\r\n        Math.round((dailyIntakeCalorie * 0.3) / 9).toString()\r\n      );\r\n      localStorage.setItem(\r\n        \"daily_intake_protein\",\r\n        Math.round(weight * actiProtDict[activity]).toString()\r\n      );\r\n\r\n      props.sendSubmitedData(true);\r\n    } else {\r\n      alert(\"Please fill out all the forms :)\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-screen relative\">\r\n      <nav className=\"navbar w-screen p-8\"></nav>\r\n\r\n      <div className=\"box-content p-8 inset-0 m-auto h-min w-fit\">\r\n        <div className=\"text-2xl mb-8\">Enter Information</div>\r\n        <div className=\"my-2 w-full\">\r\n          <p className=\"text-sm pb-2 text-gray-600\">WEIGHT</p>\r\n          <div className=\"flex w-full font-light border-b-2 transition-colors border-gray-300 hover:border-green-300 focus:border-green-300 \">\r\n            <input\r\n              type=\"number\"\r\n              placeholder=\"65\"\r\n              className=\"no-hover-effect w-full p-2\"\r\n              onChange={(event) => setWeight(Number(event.target.value))}\r\n            />\r\n            <div className=\"p-2 text-gray-400\">kg</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"my-2 w-full\">\r\n          <p className=\"text-sm py-2 text-gray-600\">HEIGHT</p>\r\n          <div className=\"flex w-full font-light  border-b-2 transition-colors border-gray-300 hover:border-green-300 focus:border-green-300\">\r\n            <input\r\n              type=\"number\"\r\n              placeholder=\"172\"\r\n              className=\"no-hover-effect w-full p-2\"\r\n              onChange={(event) => setHeight(Number(event.target.value))}\r\n            />\r\n            <div className=\"p-2 text-gray-400\">cm</div>\r\n          </div>\r\n        </div>\r\n        <p className=\"text-sm py-2 mt-2 text-gray-600\">GENDER</p>\r\n        <select\r\n          name=\"Gender\"\r\n          className=\"bg-white w-full py-3  border-b-2 transition-colors border-gray-300 hover:border-green-300 focus:border-green-300 text-gray-600\"\r\n          value={gender}\r\n          onChange={(e: any) => setGender(e.target.value)}\r\n        >\r\n          <option value=\"1\">Male</option>\r\n          <option value=\"2\">Female</option>\r\n          <option value=\"3\">Rather not disclose</option>\r\n        </select>\r\n        <p className=\"text-sm py-2 mt-2 text-gray-600\">AGE</p>\r\n        <select\r\n          name=\"Age\"\r\n          className=\"bg-white w-full py-3  border-b-2 transition-colors border-gray-300 hover:border-green-300 focus:border-green-300 text-gray-600\"\r\n          value={age}\r\n          onChange={(e: any) => setAge(e.target.value)}\r\n        >\r\n          {years}\r\n        </select>\r\n        <p className=\"text-sm py-2 mt-2 text-gray-600\">ACTIVITY</p>\r\n        <select\r\n          name=\"Activity\"\r\n          className=\"bg-white w-full py-3  border-b-2 transition-colors border-gray-300 hover:border-green-300 focus:border-green-300 text-gray-600\"\r\n          value={activity}\r\n          onChange={(e: any) => setActivity(e.target.value)}\r\n        >\r\n          <option value=\"1\">Sedentary (little or no exercise)</option>\r\n          <option value=\"2\">Lightly active (exercise 1-3 days/week)</option>\r\n          <option value=\"3\">Moderately active (exercise 3-5 times/week)</option>\r\n          <option value=\"4\">Very active (exercise 6-7times/week)</option>\r\n        </select>\r\n        <button\r\n          className=\"p-3 mt-24 w-full navbar rounded-full text-white text-lg\"\r\n          onClick={WriteToLocalStorage}\r\n          value=\"submit\"\r\n        >\r\n          Submit\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n\r\n//https://www.k-state.edu/paccats/Contents/PA/PDF/Physical%20Activity%20and%20Controlling%20Weight.pdf\r\n","import { useEffect, useState } from \"react\";\r\nimport Button from \"./Button\";\r\nimport Settings from \"./Settings\";\r\nimport Waves from \"./Waves\";\r\nconst Welcome = (props: any) => {\r\n  //This has to be false\r\n  const [getSendForward, setSendForward] = useState(false);\r\n  const [submitedForm, setSubmitedForm] = useState(false);\r\n  const [mobileDetected, setMobileDetected] = useState(false);\r\n  let getData = (val: any) => {\r\n    // do not forget to bind getData in constructor\r\n    setSendForward(val);\r\n  };\r\n\r\n  let getSubmitedData = (val: any) => {\r\n    props.sendSubmitedData(val);\r\n  };\r\n\r\n  function detectMob() {\r\n    if (window.innerWidth >= 800) {\r\n      alert(\"Please use your phone for this application\");\r\n      document.body.remove();\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    detectMob();\r\n  }, []);\r\n\r\n  return (\r\n    <main>\r\n      {getSendForward ? (\r\n        <Settings sendSubmitedData={getSubmitedData} />\r\n      ) : (\r\n        <div>\r\n          <Waves />\r\n          <div className=\"flex items-center absolute top-10 inset-0 w-min min-h m-auto\">\r\n            <div className=\"flex items-center flex-col\">\r\n              <p className=\"montserrat font-medium text-5xl mb-10\">Welcome!</p>\r\n              <div className=\"bg-gradient-to-r from-yellow-400 to-green-400 rounded-full shadow-lg p-1 button-border\">\r\n                <Button button={0} sendData={getData} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </main>\r\n  );\r\n};\r\nexport default Welcome;\r\n\r\n//Calorie Formula\r\n//https://www.verywellfit.com/how-many-calories-do-i-need-each-day-2506873\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { ReportHandler } from \"web-vitals\";\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./tsx/App\";\r\nimport \"./css/index.css\";\r\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\nserviceWorkerRegistration.register();\r\n\r\nreportWebVitals();\r\n\r\n/*\r\nhttps://create-react-app.dev/docs/making-a-progressive-web-app/\r\n*/\r\n//just a test\r\n"],"sourceRoot":""}